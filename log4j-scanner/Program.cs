//create regex for jndi string
using System.Text.RegularExpressions;

var jndiRegex = @"\$(\{|%7B)jndi:(ldap[s]?|rmi|dns|nis|iiop|corba|nds|http):/[^\n]+";
var obfuscated_regex = @"/(?:\$|\%24)(?:\{|\%7b)[^\w]*?j[^\w]*?n[^\w]*?d[^\w]*?i[^\w]*?(?:\:|\%3a)/i";

//ask user for folder path to search logs
Console.WriteLine("Enter the path to the folder containing the log files");
var path = Console.ReadLine();
//get all files in path and subfolders , handle unauthorised access
try
{
    var files = System.IO.Directory.GetFiles(path,"*", System.IO.SearchOption.AllDirectories);
    //check each file for match with both regex patterns , if match print directory, file name and line number
    var matches = 0;
    foreach (var file in files)
    {
        var fileStream = new System.IO.StreamReader(file);
        var lineNumber = 0;
        while (!fileStream.EndOfStream)
        {
            var line = fileStream.ReadLine();
            lineNumber++;
            if (Regex.IsMatch(line, jndiRegex) || Regex.IsMatch(line, obfuscated_regex))
            {
                matches++;
                Console.WriteLine("{0}\\{1}:{2}", System.IO.Path.GetDirectoryName(file), System.IO.Path.GetFileName(file), lineNumber);
            }
        }
    }
    //print total number of matches
    Console.WriteLine("Total matches: {0}", matches);
    //print total files scanned
    Console.WriteLine("Total files scanned: {0}", files.Length);
    Console.ReadLine();
    Environment.Exit(0);
}
catch (UnauthorizedAccessException)
{
    Console.WriteLine("Unauthorised access to folder, please try again");
    return;
}